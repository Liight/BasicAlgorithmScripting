function factorialize(num) {
  // Return a false value is the int passed into the method cannot be factored as a positive
  if (num < 0) 
        return -1;
        // Return the number 1 if the argument is 0
  else if (num == 0) 
      return 1;
  else {
    // Recursive algorithm to factorialise the numbers
    // Because multiplication only algorithms do not care about order, we can count backwards
    // because we can count backwards we can recursively call this parent function
    // we've already taken care of 0 or negative numbers to ensure our function will stop when required
      return (num * factorialize(num - 1));
  }
}
factorialize(5);

Note:
Basic Algorithm Scripting: Factorialize a Number
Return the factorial of the provided integer.

If the integer is represented with the letter n, a factorial is the product of all positive integers less than or equal to n.

Factorials are often represented with the shorthand notation n!

For example: 5! = 1 * 2 * 3 * 4 * 5 = 120

Only integers greater than or equal to zero will be supplied to the function.

Remember to use Read-Search-Ask if you get stuck. Write your own code.